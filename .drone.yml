kind: pipeline
type: docker
name: test-build

trigger:
  event:
    - push
  branch:
    exclude:
      - master

steps:
  - name: build
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo

---
kind: pipeline
type: docker
name: create-release-artifact

trigger:
  event:
    - push
    - tag
  branch:
    - master

steps:
  - name: build-for-release
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo

  - name: create-and-upload-archive
    image: alpine:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      S3_RELEASES_BUCKET:
        from_secret: s3_releases_bucket
    commands:
      - |
        # On commence par installer les outils
        apk add --no-cache aws-cli tar
        
        # --- DÉBOGAGE : On affiche les variables que Drone nous donne ---
        echo "Drone event is: $DRONE_BUILD_EVENT"
        echo "Drone tag is: '$DRONE_TAG'"
        echo "Drone commit SHA is: '$DRONE_COMMIT_SHA'"
        
        # On initialise la variable pour être sûr qu'elle existe
        ARTIFACT_NAME=""
        
        # On choisit le nom de l'archive
        if [ "$DRONE_BUILD_EVENT" = "tag" ]; then
          ARTIFACT_NAME="resto-$DRONE_TAG"
        else
          # On prend les 7 premiers caractères du SHA
          COMMIT_SHA_SHORT=$(echo $DRONE_COMMIT_SHA | cut -c 1-7)
          ARTIFACT_NAME="resto-sha-$COMMIT_SHA_SHORT"
        fi
        
        echo "Final artifact name is: '$ARTIFACT_NAME'"
        
        # --- SÉCURITÉ : On arrête le script si le nom est vide ---
        if [ -z "$ARTIFACT_NAME" ]; then
          echo "Error: Artifact name is empty. Aborting."
          exit 1
        fi
        
        # On crée l'archive
        tar -czvf "${ARTIFACT_NAME}.tar.gz" public
        
        # On l'uploade sur S3
        aws s3 cp "${ARTIFACT_NAME}.tar.gz" s3://$S3_RELEASES_BUCKET/

---
kind: pipeline
type: docker
name: promote-to-environment

trigger:
  event:
    - promote
  target:
    - staging
    - production

steps:
  - name: build-and-deploy-to-target
    image: peaceiris/hugo:v0.65.3-mod
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      S3_PROD_URL:
        from_secret: s3_prod_url
      S3_STAGING_URL:
        from_secret: s3_staging_url
      S3_PROD_BUCKET:
        from_secret: s3_prod_bucket
      S3_STAGING_BUCKET:
        from_secret: s3_staging_bucket
    commands:
      - 'if [ "$DRONE_DEPLOY_TO" = "production" ]; then BASE_URL="$S3_PROD_URL" && BUCKET_NAME="$S3_PROD_BUCKET"; else BASE_URL="$S3_STAGING_URL" && BUCKET_NAME="$S3_STAGING_BUCKET"; fi'
      - echo "Deploying to $DRONE_DEPLOY_TO with URL $BASE_URL"
      - hugo --baseURL $BASE_URL
      - aws s3 sync public/ s3://$BUCKET_NAME/ --delete