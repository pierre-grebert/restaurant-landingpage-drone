kind: pipeline
type: docker
name: test-build

trigger:
  event:
    - push
  branch:
    exclude:
      - master

steps:
  - name: build
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo

---
kind: pipeline
type: docker
name: deploy-to-staging

trigger:
  event:
    - push
  branch:
    - master

steps:
  - name: build-for-staging
    image: peaceiris/hugo:v0.65.3-mod
    environment:
      BASE_URL:
        from_secret: s3_staging_url
    commands:
      - hugo --baseURL $BASE_URL

  - name: deploy-and-archive-staging
    image: alpine:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      S3_STAGING_BUCKET:
        from_secret: s3_staging_bucket
      S3_RELEASES_BUCKET:
        from_secret: s3_releases_bucket
    commands:
      - |
        apk add --no-cache aws-cli zip
        
        aws s3 sync public/ s3://$S3_STAGING_BUCKET/ --delete
        
        COMMIT_SHA_SHORT=$(echo $DRONE_COMMIT_SHA | cut -c 1-7)
        ARTIFACT_NAME="restaurant-build-preprod-${COMMIT_SHA_SHORT}"
        zip -r "${ARTIFACT_NAME}.zip" public
        aws s3 cp "${ARTIFACT_NAME}.zip" s3://$S3_RELEASES_BUCKET/preprod/

---
kind: pipeline
type: docker
name: create-tagged-release

trigger:
  event:
    - tag

steps:
  - name: build-for-release
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo

  - name: create-and-upload-archive
    image: alpine:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      S3_RELEASES_BUCKET:
        from_secret: s3_releases_bucket
    commands:
      - |
        apk add --no-cache aws-cli zip
        ARTIFACT_NAME="resto-${DRONE_TAG}"
        zip -r "${ARTIFACT_NAME}.zip" public
        aws s3 cp "${ARTIFACT_NAME}.zip" s3://$S3_RELEASES_BUCKET/

---
kind: pipeline
type: docker
name: promote-to-environment

trigger:
  event:
    - promote
  target:
    - staging
    - production

steps:
  - name: deploy-release
    image: peaceiris/hugo:v0.65.3-mod
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      S3_PROD_URL:
        from_secret: s3_prod_url
      S3_STAGING_URL:
        from_secret: s3_staging_url
      S3_PROD_BUCKET:
        from_secret: s3_prod_bucket
      S3_STAGING_BUCKET:
        from_secret: s3_staging_bucket
    commands:
      - |
        if [ "$DRONE_DEPLOY_TO" = "production" ]; then
          BASE_URL="$S3_PROD_URL"
          BUCKET_NAME="$S3_PROD_BUCKET"
        else
          BASE_URL="$S3_STAGING_URL"
          BUCKET_NAME="$S3_STAGING_BUCKET"
        fi
        
        hugo --baseURL $BASE_URL
        
        apk add --no-cache aws-cli
        aws s3 sync public/ s3://$BUCKET_NAME/ --delete